// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrganizerApi.Repository;

namespace Repository.Migrations
{
    [DbContext(typeof(OrganizerDbContext))]
    [Migration("20200514124115_intial3")]
    partial class intial3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OrganizerApi.Domain.Day", b =>
                {
                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.HasKey("date");

                    b.ToTable("Days");
                });

            modelBuilder.Entity("OrganizerApi.Domain.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Daydate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Daydate");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("OrganizerApi.Domain.ScheduleEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Daydate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("endTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("startTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Daydate");

                    b.ToTable("ScheduleEntries");
                });

            modelBuilder.Entity("OrganizerApi.Domain.ToDo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Daydate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDone")
                        .HasColumnType("bit");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Daydate");

                    b.ToTable("ToDoEntries");
                });

            modelBuilder.Entity("OrganizerApi.Domain.Note", b =>
                {
                    b.HasOne("OrganizerApi.Domain.Day", "Day")
                        .WithMany("Notes")
                        .HasForeignKey("Daydate");
                });

            modelBuilder.Entity("OrganizerApi.Domain.ScheduleEntry", b =>
                {
                    b.HasOne("OrganizerApi.Domain.Day", "Day")
                        .WithMany("ScheduleEntries")
                        .HasForeignKey("Daydate");
                });

            modelBuilder.Entity("OrganizerApi.Domain.ToDo", b =>
                {
                    b.HasOne("OrganizerApi.Domain.Day", "Day")
                        .WithMany("ToDoEntries")
                        .HasForeignKey("Daydate");
                });
#pragma warning restore 612, 618
        }
    }
}
